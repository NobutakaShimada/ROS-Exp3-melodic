<launch>
  <!-- Arguments -->
  <arg name="model"          default="waffle_pi"
                             doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="slam_methods"   default="gmapping"
                             doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
  <arg name="open_rviz"      default="true"/>
  <arg name="use_robot_name" default="tb3"/>
  <arg name="scan_topic"     default="scan_filtered"/>

  <!-- TurtleBot3 -->

  <group ns="$(arg use_robot_name)">
    <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find open_manipulator_with_tb3_description)/urdf/open_manipulator_with_tb3_$(arg model).urdf.xacro'" />
    <param name="robot_description" command="$(arg urdf_file)" />

    <!--
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
    </node>
    -->

    <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter" output="screen" >
      <rosparam command="load" file="$(find open_manipulator_with_tb3_tools)/config/scan_data_filter.yaml" />
    </node>


    <!-- Gmapping -->
    <node pkg="gmapping" type="slam_gmapping"
          name="turtlebot3_slam_gmapping" output="screen">
      <remap from="scan"  to="$(arg scan_topic)"/>

      <param name="base_frame" value="$(arg use_robot_name)/base_footprint"/>
      <param name="odom_frame" value="$(arg use_robot_name)/odom"/>
      <param name="map_frame"  value="map"/>
      <rosparam command="load" file="$(find exp3)/config/gmapping_params.yaml" />
    </node>
  </group>

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find exp3)/rviz/slam_melodic.rviz"/>
  </group>
</launch>
